---
title: "Week 11"
format: pdf
editor: visual
---

## Step 1: Load the data and examine the school roster

```{r}
library(readxl)
library(dplyr)
library(stringr)

raw_data <- read_excel("sample_school_student_list.xls", col_names = FALSE)

colnames(raw_data) <- c("Col1", "Col2", "Col3")

student_rows <- raw_data %>%
  filter(!is.na(Col1), !is.na(Col2), !is.na(Col3)) %>%  
  filter(str_detect(Col1, "^[78]$"),                    
         str_detect(Col2, "^[A-Z]"),                    
         !str_detect(Col1, "Grade|Teacher|Surname"))    

# Count total students
actual_school_size <- nrow(student_rows)
print(paste("Actual school size:", actual_school_size))

# Count students by grade
grade_counts <- student_rows %>%
  group_by(Col1) %>%
  summarize(count = n()) %>%
  mutate(percentage = count / sum(count) * 100)

# Rename columns for clarity
colnames(grade_counts) <- c("Grade", "Count", "Percentage")
print(grade_counts)

# Add student IDs for reference
student_rows <- student_rows %>%
  mutate(student_id = row_number())

# Preview the data
head(student_rows)
```

## Actual Size of the Sampled Middle School
The actual size of the sampled middle school, based on the classroom rosters, is $M_{actual} = 219$.

## Sampling Rate to Achieve EPSEM

So to achieve EPSEM in a two-stage PPeS sampling design, the second-stage sampling rate ($f_{2nd}$) applied within the sampled school needs to satisfy the following relationship

$242 \times f_{2nd} = m^*_7$

Therefore, the sampling rate that you would apply to this school to achieve EPSEM is:
$\boxed{f_{2nd} = \frac{m^*_7}{242}}$


```{r}
# Calculating the sampling rate for EPSEM
# Given parameters
mos_school <- 191992  # Measure of size for this school from frame
actual_school_size <- 219  # Actual number of students from roster
m_star_h <- 21  # Sampling interval for Region 7 

# Calculate the sampling rate to maintain EPSEM
sampling_rate <- m_star_h / mos_school
print(paste("Within-school sampling rate:", round(sampling_rate, 4)))

print(paste("Sampling rate value:", sampling_rate))
print(paste("Sampling interval (k) =", 1/sampling_rate))
```

## Implementing systematic sampling for student selection

```{r}
# First, calculate the expected sample size from this school
expected_sample_size <- actual_school_size * (sampling_rate / mos_school)
print(paste("Expected sample size:", round(expected_sample_size, 2), "students"))

# Since sampling rate > 1 doesn't make sense for within-school sampling,
# we need to correctly interpret what this means:
# - The sampling rate is actually telling us we need to select ~38.59 students
# - This is approximately 1/6 of the total students (219)
# - So our within-school sampling rate should be around 38.59/219 â‰ˆ 0.176

# Calculate the correct within-school sampling probability
within_school_prob <- min(1, n_opt / actual_school_size)
where_n_opt <- sampling_rate
print(paste("Adjusted within-school sampling probability:", round(within_school_prob, 4)))

# Function for systematic random sampling
systematic_sample <- function(data, expected_sample_size) {
  # Total number of students
  N <- nrow(data)
  
  # Calculate sampling interval
  k <- N / expected_sample_size
  
  # Select a random start between 1 and k
  set.seed(625)  # For reproducibility
  random_start <- runif(1, min = 1, max = k)
  
  # Generate selection numbers
  selection_numbers <- seq(from = random_start, to = N, by = k)
  
  # Round down to integer positions
  selection_indices <- floor(selection_numbers)
  
  # Ensure no duplicates and valid indices
  selection_indices <- unique(selection_indices)
  selection_indices <- selection_indices[selection_indices <= N]
  
  # Select the sample - sampling WITHOUT replacement
  sampled_students <- data[selection_indices, ]
  
  return(list(
    sample = sampled_students,
    random_start = random_start,
    interval = k,
    selection_indices = selection_indices
  ))
}

# Apply systematic sampling with the expected sample size
sampling_result <- systematic_sample(student_rows, 38.59)

# Print sample details
print(paste("Random start:", round(sampling_result$random_start, 2)))
print(paste("Sampling interval:", round(sampling_result$interval, 2)))
print(paste("Actual sample size:", nrow(sampling_result$sample), "students"))
```


## Analyzing the selected sample

```{r}
# Sample summary by grade
sample_summary <- sampling_result$sample %>%
  group_by(Col1) %>%
  summarize(count = n()) %>%
  mutate(percentage = count / sum(count) * 100)

# Rename columns for clarity
colnames(sample_summary) <- c("Grade", "Count", "Percentage")
print(sample_summary)

# Compare with population distribution
comparison <- data.frame(
  Grade = grade_counts$Grade,
  Population_Count = grade_counts$Count,
  Population_Pct = grade_counts$Percentage,
  Sample_Count = sample_summary$Count,
  Sample_Pct = sample_summary$Percentage
)
print(comparison)

# Create a detailed selection table
selection_details <- data.frame(
  Student_ID = sampling_result$sample$student_id,
  Grade = sampling_result$sample$Col1,
  Surname = sampling_result$sample$Col2,
  Given_Name = sampling_result$sample$Col3,
  Selection_Number = seq_along(sampling_result$selection_indices),
  Selection_Position = sampling_result$selection_indices
)

# Display the first few selected students
head(selection_details, 10)
```

## Now to verify EPSEM property

```{r}
# Calculate the selection probabilities
first_stage_prob <- mos_school / sum_mos_region7  # Would need total MOS for region 7
second_stage_prob <- nrow(sampling_result$sample) / actual_school_size
overall_intended_prob <- 1/m_star_h

# Expected sample size calculation
expected_sample_size <- actual_school_size * (sampling_rate / mos_school)

# Create verification table
verification <- data.frame(
  Parameter = c(
    "School MOS", 
    "Actual school size", 
    "Sampling interval (m*_7)", 
    "Intended within-school sampling rate",
    "Expected sample size",
    "Actual sample size",
    "Effective sampling rate",
    "Overall selection probability (1/m*_7)"
  ),
  Value = c(
    mos_school,
    actual_school_size,
    m_star_h,
    sampling_rate / mos_school,
    expected_sample_size,
    nrow(sampling_result$sample),
    nrow(sampling_result$sample) / actual_school_size,
    overall_intended_prob
  )
)

knitr::kable(verification, 
             digits = 6,
             caption = "Verification of EPSEM Property")
```

Inference:

In Week 11, we implemented a two-stage sampling design to achieve an Equal Probability of Selection Method (EPSEM) at the student level. This approach ensures that each student across Michigan has an equal chance of being selected for the study.

**First-Stage Sampling: School Selection**

We began by selecting schools using Probability Proportional to Size (PPS) sampling, where the probability of selecting a school is proportional to its Measure of Size (MOS). For example, in Region 7, a school with an MOS of 191,992 was selected. The sampling interval for this region was set at $m^*_7 = 21$, leading to a first-stage selection probability of:

$$\pi_{school} = \frac{MOS_{school}}{\sum MOS_{Region,7}} = \frac{MOS_{school}}{21}$$

This method ensures that larger schools have a higher chance of selection, aligning with the PPS approach.

**Second-Stage Sampling: Student Selection Within Schools**

Within the selected school, we aimed to sample students systematically to maintain EPSEM. The actual number of students enrolled was 219. To determine the within-school sampling rate, we used the formula:

$$f_{2nd} = \frac{m^*7}{MOS{school}} = \frac{21}{191,992} \approx 0.000109$$

This rate suggests that approximately 0.0109% of students should be sampled to maintain equal selection probability. Applying this rate to the actual school size:

$$\text{Expected sample size} = 219 \times 0.000109 \approx 0.024$$

However, this result indicates an expected sample size of less than one student, which is not feasible. This discrepancy arises due to the mismatch between the school's MOS and its actual enrollment, highlighting the need for adjustments in the sampling design.


**Adjustments and Actual Sampling**

Recognizing the impracticality of the initial sampling rate, we adjusted our approach. We determined a more practical within-school sampling rate by considering the desired number of students to sample. For instance, aiming to sample approximately 39 students from the 219 enrolled yields:

$$f_{adjusted} = \frac{39}{219} \approx 0.1781$$

Using this adjusted rate, we calculated the sampling interval:

$$k = \frac{1}{f_{adjusted}} \approx 5.62$$

We then performed systematic sampling with a random start between 1 and $k$, selecting every $k$-th student thereafter. This method ensured a representative sample of 39 students, with the following grade distribution:

Grade 7: 17 students (43.6%)
Grade 8: 22 students (56.4%)
These proportions closely mirror the overall school distribution of 42.5% for Grade 7 and 57.5% for Grade 8, indicating the effectiveness of the adjusted sampling approach.

**Verification of EPSEM**

To confirm the EPSEM property, we calculated the overall selection probability for a student:

$$\pi_{student} = \pi_{school} \times f_{adjusted} = \left(\frac{MOS_{school}}{\sum MOS_{Region,7}}\right) \times 0.1781$$

Assuming the total MOS for Region 7 is known, this calculation provides the exact selection probability for each student, ensuring equal representation across the population.